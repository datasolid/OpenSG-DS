/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2013 by the OpenSG Forum                 *
 *                                                                           *
 * contact: dirk@opensg.org, gerrit.voss@vossg.org, carsten_neumann@gmx.net  *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Cubes!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE



//! access the type of the class
inline
OSG::FieldContainerType &CubesBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 CubesBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 CubesBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/


//! Get the value of the \a index element the Cubes::_mfPosition field.
inline
const Pnt3f &CubesBase::getPosition(const UInt32 index) const
{
    return _mfPosition[index];
}

inline
MFPnt3f            ::reference CubesBase::editPosition(const UInt32 index)
{
    editMField(PositionFieldMask, _mfPosition);

    return _mfPosition[index];
}

//! Get the value of the \a index element the Cubes::_mfLength field.
inline
      Real32  CubesBase::getLength(const UInt32 index) const
{
    return _mfLength[index];
}

inline
MFReal32           ::reference CubesBase::editLength(const UInt32 index)
{
    editMField(LengthFieldMask, _mfLength);

    return _mfLength[index];
}

//! Get the value of the \a index element the Cubes::_mfColor field.
inline
const Color3f &CubesBase::getColor(const UInt32 index) const
{
    return _mfColor[index];
}

inline
MFColor3f          ::reference CubesBase::editColor(const UInt32 index)
{
    editMField(ColorFieldMask, _mfColor);

    return _mfColor[index];
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void CubesBase::execSync (      CubesBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (PositionFieldMask & whichField))
        _mfPosition.syncWith(pFrom->_mfPosition,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (LengthFieldMask & whichField))
        _mfLength.syncWith(pFrom->_mfLength,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (ColorFieldMask & whichField))
        _mfColor.syncWith(pFrom->_mfColor,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);
}
#endif


inline
const Char8 *CubesBase::getClassname(void)
{
    return "Cubes";
}
OSG_GEN_CONTAINERPTR(Cubes);

OSG_END_NAMESPACE

