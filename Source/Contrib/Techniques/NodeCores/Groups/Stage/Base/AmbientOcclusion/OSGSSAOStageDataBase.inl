/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2013 by the OpenSG Forum                 *
 *                                                                           *
 * contact: dirk@opensg.org, gerrit.voss@vossg.org, carsten_neumann@gmx.net  *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class SSAOStageData!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE



//! access the type of the class
inline
OSG::FieldContainerType &SSAOStageDataBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 SSAOStageDataBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 SSAOStageDataBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the SSAOStageData::_sfWidth field.

inline
UInt32 &SSAOStageDataBase::editWidth(void)
{
    editSField(WidthFieldMask);

    return _sfWidth.getValue();
}

//! Get the value of the SSAOStageData::_sfWidth field.
inline
      UInt32  SSAOStageDataBase::getWidth(void) const
{
    return _sfWidth.getValue();
}

//! Set the value of the SSAOStageData::_sfWidth field.
inline
void SSAOStageDataBase::setWidth(const UInt32 value)
{
    editSField(WidthFieldMask);

    _sfWidth.setValue(value);
}
//! Get the value of the SSAOStageData::_sfHeight field.

inline
UInt32 &SSAOStageDataBase::editHeight(void)
{
    editSField(HeightFieldMask);

    return _sfHeight.getValue();
}

//! Get the value of the SSAOStageData::_sfHeight field.
inline
      UInt32  SSAOStageDataBase::getHeight(void) const
{
    return _sfHeight.getValue();
}

//! Set the value of the SSAOStageData::_sfHeight field.
inline
void SSAOStageDataBase::setHeight(const UInt32 value)
{
    editSField(HeightFieldMask);

    _sfHeight.setValue(value);
}
//! Get the value of the SSAOStageData::_sfCalcPosFromDepth field.

inline
bool &SSAOStageDataBase::editCalcPosFromDepth(void)
{
    editSField(CalcPosFromDepthFieldMask);

    return _sfCalcPosFromDepth.getValue();
}

//! Get the value of the SSAOStageData::_sfCalcPosFromDepth field.
inline
      bool  SSAOStageDataBase::getCalcPosFromDepth(void) const
{
    return _sfCalcPosFromDepth.getValue();
}

//! Set the value of the SSAOStageData::_sfCalcPosFromDepth field.
inline
void SSAOStageDataBase::setCalcPosFromDepth(const bool value)
{
    editSField(CalcPosFromDepthFieldMask);

    _sfCalcPosFromDepth.setValue(value);
}
//! Get the value of the SSAOStageData::_sfProjection field.

inline
Matrix &SSAOStageDataBase::editProjection(void)
{
    editSField(ProjectionFieldMask);

    return _sfProjection.getValue();
}

//! Get the value of the SSAOStageData::_sfProjection field.
inline
const Matrix &SSAOStageDataBase::getProjection(void) const
{
    return _sfProjection.getValue();
}

//! Set the value of the SSAOStageData::_sfProjection field.
inline
void SSAOStageDataBase::setProjection(const Matrix &value)
{
    editSField(ProjectionFieldMask);

    _sfProjection.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void SSAOStageDataBase::execSync (      SSAOStageDataBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (WidthFieldMask & whichField))
        _sfWidth.syncWith(pFrom->_sfWidth);

    if(FieldBits::NoField != (HeightFieldMask & whichField))
        _sfHeight.syncWith(pFrom->_sfHeight);

    if(FieldBits::NoField != (CalcPosFromDepthFieldMask & whichField))
        _sfCalcPosFromDepth.syncWith(pFrom->_sfCalcPosFromDepth);

    if(FieldBits::NoField != (ProjectionFieldMask & whichField))
        _sfProjection.syncWith(pFrom->_sfProjection);

    if(FieldBits::NoField != (ScenePassRenderTargetFieldMask & whichField))
        _sfScenePassRenderTarget.syncWith(pFrom->_sfScenePassRenderTarget);

    if(FieldBits::NoField != (ScenePassShaderFieldMask & whichField))
        _sfScenePassShader.syncWith(pFrom->_sfScenePassShader);

    if(FieldBits::NoField != (ScenePassMaterialFieldMask & whichField))
        _sfScenePassMaterial.syncWith(pFrom->_sfScenePassMaterial);

    if(FieldBits::NoField != (SSAOPassRenderTargetFieldMask & whichField))
        _sfSSAOPassRenderTarget.syncWith(pFrom->_sfSSAOPassRenderTarget);

    if(FieldBits::NoField != (SSAOPassShaderFieldMask & whichField))
        _sfSSAOPassShader.syncWith(pFrom->_sfSSAOPassShader);

    if(FieldBits::NoField != (SSAOPassMaterialFieldMask & whichField))
        _sfSSAOPassMaterial.syncWith(pFrom->_sfSSAOPassMaterial);

    if(FieldBits::NoField != (BlurPassRenderTargetFieldMask & whichField))
        _sfBlurPassRenderTarget.syncWith(pFrom->_sfBlurPassRenderTarget);

    if(FieldBits::NoField != (BlurPassShaderFieldMask & whichField))
        _sfBlurPassShader.syncWith(pFrom->_sfBlurPassShader);

    if(FieldBits::NoField != (BlurPassMaterialFieldMask & whichField))
        _sfBlurPassMaterial.syncWith(pFrom->_sfBlurPassMaterial);

    if(FieldBits::NoField != (SharedMaterialChunkFieldMask & whichField))
        _sfSharedMaterialChunk.syncWith(pFrom->_sfSharedMaterialChunk);
}
#endif


inline
const Char8 *SSAOStageDataBase::getClassname(void)
{
    return "SSAOStageData";
}
OSG_GEN_CONTAINERPTR(SSAOStageData);

OSG_END_NAMESPACE

