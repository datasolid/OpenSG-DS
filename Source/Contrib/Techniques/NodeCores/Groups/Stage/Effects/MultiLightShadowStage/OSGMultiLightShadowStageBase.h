/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2013 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 * contact: dirk@opensg.org, gerrit.voss@vossg.org, carsten_neumann@gmx.net  *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class MultiLightShadowStage
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGMULTILIGHTSHADOWSTAGEBASE_H_
#define _OSGMULTILIGHTSHADOWSTAGEBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGContribTechniquesDef.h"

//#include "OSGBaseTypes.h"

#include "OSGStage.h" // Parent

#include "OSGSysFields.h"               // ShadowMode type
#include "OSGMultiLightShadowParameterFields.h" // ShadowParameter type
#include "OSGNodeFields.h"              // ExcludeNodes type
#include "OSGMultiLightChunkFields.h"   // MultiLightChunk type

#include "OSGMultiLightShadowStageFields.h"

OSG_BEGIN_NAMESPACE


class MultiLightShadowStage;

//! \brief MultiLightShadowStage Base Class.

class OSG_CONTRIBTECHNIQUES_DLLMAPPING MultiLightShadowStageBase : public Stage
{
  public:

    typedef Stage Inherited;
    typedef Stage ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(MultiLightShadowStage);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        ShadowModeFieldId = Inherited::NextFieldId,
        ActivateFieldId = ShadowModeFieldId + 1,
        ShadowOnFieldId = ActivateFieldId + 1,
        UseHWPCFFieldId = ShadowOnFieldId + 1,
        ShadowParameterFieldId = UseHWPCFFieldId + 1,
        ShadowMapWidthFieldId = ShadowParameterFieldId + 1,
        ShadowMapHeightFieldId = ShadowMapWidthFieldId + 1,
        FilterDistributionSizeFieldId = ShadowMapHeightFieldId + 1,
        SearchDistributionSizeFieldId = FilterDistributionSizeFieldId + 1,
        CullFrontFaceFieldId = SearchDistributionSizeFieldId + 1,
        OffsetBiasFieldId = CullFrontFaceFieldId + 1,
        OffsetFactorFieldId = OffsetBiasFieldId + 1,
        EnlargeShadowVolumeZFieldId = OffsetFactorFieldId + 1,
        ExcludeNodesFieldId = EnlargeShadowVolumeZFieldId + 1,
        AutoExcludeTransparentNodesFieldId = ExcludeNodesFieldId + 1,
        MultiLightChunkFieldId = AutoExcludeTransparentNodesFieldId + 1,
        AutoSearchMultiLightChunkFieldId = MultiLightChunkFieldId + 1,
        SamplerCubeArrayTextureUnitFieldId = AutoSearchMultiLightChunkFieldId + 1,
        SamplerCubeArrayShadowTextureUnitFieldId = SamplerCubeArrayTextureUnitFieldId + 1,
        Sampler2DArrayTextureUnitFieldId = SamplerCubeArrayShadowTextureUnitFieldId + 1,
        Sampler2DArrayShadowTextureUnitFieldId = Sampler2DArrayTextureUnitFieldId + 1,
        ShadowDataBindingPntFieldId = Sampler2DArrayShadowTextureUnitFieldId + 1,
        ShadowParameterBindingPntFieldId = ShadowDataBindingPntFieldId + 1,
        DistributionBindingPntFieldId = ShadowParameterBindingPntFieldId + 1,
        DisableOverrideFieldId = DistributionBindingPntFieldId + 1,
        ArbTestFieldId = DisableOverrideFieldId + 1,
        NextFieldId = ArbTestFieldId + 1
    };

    static const OSG::BitVector ShadowModeFieldMask =
        (TypeTraits<BitVector>::One << ShadowModeFieldId);
    static const OSG::BitVector ActivateFieldMask =
        (TypeTraits<BitVector>::One << ActivateFieldId);
    static const OSG::BitVector ShadowOnFieldMask =
        (TypeTraits<BitVector>::One << ShadowOnFieldId);
    static const OSG::BitVector UseHWPCFFieldMask =
        (TypeTraits<BitVector>::One << UseHWPCFFieldId);
    static const OSG::BitVector ShadowParameterFieldMask =
        (TypeTraits<BitVector>::One << ShadowParameterFieldId);
    static const OSG::BitVector ShadowMapWidthFieldMask =
        (TypeTraits<BitVector>::One << ShadowMapWidthFieldId);
    static const OSG::BitVector ShadowMapHeightFieldMask =
        (TypeTraits<BitVector>::One << ShadowMapHeightFieldId);
    static const OSG::BitVector FilterDistributionSizeFieldMask =
        (TypeTraits<BitVector>::One << FilterDistributionSizeFieldId);
    static const OSG::BitVector SearchDistributionSizeFieldMask =
        (TypeTraits<BitVector>::One << SearchDistributionSizeFieldId);
    static const OSG::BitVector CullFrontFaceFieldMask =
        (TypeTraits<BitVector>::One << CullFrontFaceFieldId);
    static const OSG::BitVector OffsetBiasFieldMask =
        (TypeTraits<BitVector>::One << OffsetBiasFieldId);
    static const OSG::BitVector OffsetFactorFieldMask =
        (TypeTraits<BitVector>::One << OffsetFactorFieldId);
    static const OSG::BitVector EnlargeShadowVolumeZFieldMask =
        (TypeTraits<BitVector>::One << EnlargeShadowVolumeZFieldId);
    static const OSG::BitVector ExcludeNodesFieldMask =
        (TypeTraits<BitVector>::One << ExcludeNodesFieldId);
    static const OSG::BitVector AutoExcludeTransparentNodesFieldMask =
        (TypeTraits<BitVector>::One << AutoExcludeTransparentNodesFieldId);
    static const OSG::BitVector MultiLightChunkFieldMask =
        (TypeTraits<BitVector>::One << MultiLightChunkFieldId);
    static const OSG::BitVector AutoSearchMultiLightChunkFieldMask =
        (TypeTraits<BitVector>::One << AutoSearchMultiLightChunkFieldId);
    static const OSG::BitVector SamplerCubeArrayTextureUnitFieldMask =
        (TypeTraits<BitVector>::One << SamplerCubeArrayTextureUnitFieldId);
    static const OSG::BitVector SamplerCubeArrayShadowTextureUnitFieldMask =
        (TypeTraits<BitVector>::One << SamplerCubeArrayShadowTextureUnitFieldId);
    static const OSG::BitVector Sampler2DArrayTextureUnitFieldMask =
        (TypeTraits<BitVector>::One << Sampler2DArrayTextureUnitFieldId);
    static const OSG::BitVector Sampler2DArrayShadowTextureUnitFieldMask =
        (TypeTraits<BitVector>::One << Sampler2DArrayShadowTextureUnitFieldId);
    static const OSG::BitVector ShadowDataBindingPntFieldMask =
        (TypeTraits<BitVector>::One << ShadowDataBindingPntFieldId);
    static const OSG::BitVector ShadowParameterBindingPntFieldMask =
        (TypeTraits<BitVector>::One << ShadowParameterBindingPntFieldId);
    static const OSG::BitVector DistributionBindingPntFieldMask =
        (TypeTraits<BitVector>::One << DistributionBindingPntFieldId);
    static const OSG::BitVector DisableOverrideFieldMask =
        (TypeTraits<BitVector>::One << DisableOverrideFieldId);
    static const OSG::BitVector ArbTestFieldMask =
        (TypeTraits<BitVector>::One << ArbTestFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFUInt32          SFShadowModeType;
    typedef SFBool            SFActivateType;
    typedef SFBool            SFShadowOnType;
    typedef SFBool            SFUseHWPCFType;
    typedef MFUnrecMultiLightShadowParameterPtr MFShadowParameterType;
    typedef SFUInt32          SFShadowMapWidthType;
    typedef SFUInt32          SFShadowMapHeightType;
    typedef SFInt32           SFFilterDistributionSizeType;
    typedef SFInt32           SFSearchDistributionSizeType;
    typedef SFBool            SFCullFrontFaceType;
    typedef SFReal32          SFOffsetBiasType;
    typedef SFReal32          SFOffsetFactorType;
    typedef SFReal32          SFEnlargeShadowVolumeZType;
    typedef MFUnrecNodePtr    MFExcludeNodesType;
    typedef SFBool            SFAutoExcludeTransparentNodesType;
    typedef SFWeakMultiLightChunkPtr SFMultiLightChunkType;
    typedef SFBool            SFAutoSearchMultiLightChunkType;
    typedef SFInt32           SFSamplerCubeArrayTextureUnitType;
    typedef SFInt32           SFSamplerCubeArrayShadowTextureUnitType;
    typedef SFInt32           SFSampler2DArrayTextureUnitType;
    typedef SFInt32           SFSampler2DArrayShadowTextureUnitType;
    typedef SFInt32           SFShadowDataBindingPntType;
    typedef SFInt32           SFShadowParameterBindingPntType;
    typedef SFInt32           SFDistributionBindingPntType;
    typedef SFBool            SFDisableOverrideType;
    typedef SFBool            SFArbTestType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


                  SFUInt32            *editSFShadowMode     (void);
            const SFUInt32            *getSFShadowMode      (void) const;

                  SFBool              *editSFActivate       (void);
            const SFBool              *getSFActivate        (void) const;

                  SFBool              *editSFShadowOn       (void);
            const SFBool              *getSFShadowOn        (void) const;

                  SFBool              *editSFUseHWPCF       (void);
            const SFBool              *getSFUseHWPCF        (void) const;

                  SFUInt32            *editSFShadowMapWidth (void);
            const SFUInt32            *getSFShadowMapWidth  (void) const;

                  SFUInt32            *editSFShadowMapHeight(void);
            const SFUInt32            *getSFShadowMapHeight (void) const;

                  SFInt32             *editSFFilterDistributionSize(void);
            const SFInt32             *getSFFilterDistributionSize (void) const;

                  SFInt32             *editSFSearchDistributionSize(void);
            const SFInt32             *getSFSearchDistributionSize (void) const;

                  SFBool              *editSFCullFrontFace  (void);
            const SFBool              *getSFCullFrontFace   (void) const;

                  SFReal32            *editSFOffsetBias     (void);
            const SFReal32            *getSFOffsetBias      (void) const;

                  SFReal32            *editSFOffsetFactor   (void);
            const SFReal32            *getSFOffsetFactor    (void) const;

                  SFReal32            *editSFEnlargeShadowVolumeZ(void);
            const SFReal32            *getSFEnlargeShadowVolumeZ (void) const;
            const MFUnrecNodePtr      *getMFExcludeNodes   (void) const;
                  MFUnrecNodePtr      *editMFExcludeNodes   (void);

                  SFBool              *editSFAutoExcludeTransparentNodes(void);
            const SFBool              *getSFAutoExcludeTransparentNodes (void) const;
            const SFWeakMultiLightChunkPtr *getSFMultiLightChunk(void) const;
                  SFWeakMultiLightChunkPtr *editSFMultiLightChunk(void);

                  SFBool              *editSFAutoSearchMultiLightChunk(void);
            const SFBool              *getSFAutoSearchMultiLightChunk (void) const;

                  SFInt32             *editSFSamplerCubeArrayTextureUnit(void);
            const SFInt32             *getSFSamplerCubeArrayTextureUnit (void) const;

                  SFInt32             *editSFSamplerCubeArrayShadowTextureUnit(void);
            const SFInt32             *getSFSamplerCubeArrayShadowTextureUnit (void) const;

                  SFInt32             *editSFSampler2DArrayTextureUnit(void);
            const SFInt32             *getSFSampler2DArrayTextureUnit (void) const;

                  SFInt32             *editSFSampler2DArrayShadowTextureUnit(void);
            const SFInt32             *getSFSampler2DArrayShadowTextureUnit (void) const;

                  SFInt32             *editSFShadowDataBindingPnt(void);
            const SFInt32             *getSFShadowDataBindingPnt (void) const;

                  SFInt32             *editSFShadowParameterBindingPnt(void);
            const SFInt32             *getSFShadowParameterBindingPnt (void) const;

                  SFInt32             *editSFDistributionBindingPnt(void);
            const SFInt32             *getSFDistributionBindingPnt (void) const;

                  SFBool              *editSFDisableOverride(void);
            const SFBool              *getSFDisableOverride (void) const;

                  SFBool              *editSFArbTest        (void);
            const SFBool              *getSFArbTest         (void) const;


                  UInt32              &editShadowMode     (void);
                  UInt32               getShadowMode      (void) const;

                  bool                &editActivate       (void);
                  bool                 getActivate        (void) const;

                  bool                &editShadowOn       (void);
                  bool                 getShadowOn        (void) const;

                  bool                &editUseHWPCF       (void);
                  bool                 getUseHWPCF        (void) const;

                  UInt32              &editShadowMapWidth (void);
                  UInt32               getShadowMapWidth  (void) const;

                  UInt32              &editShadowMapHeight(void);
                  UInt32               getShadowMapHeight (void) const;

                  Int32               &editFilterDistributionSize(void);
                  Int32                getFilterDistributionSize (void) const;

                  Int32               &editSearchDistributionSize(void);
                  Int32                getSearchDistributionSize (void) const;

                  bool                &editCullFrontFace  (void);
                  bool                 getCullFrontFace   (void) const;

                  Real32              &editOffsetBias     (void);
                  Real32               getOffsetBias      (void) const;

                  Real32              &editOffsetFactor   (void);
                  Real32               getOffsetFactor    (void) const;

                  Real32              &editEnlargeShadowVolumeZ(void);
                  Real32               getEnlargeShadowVolumeZ (void) const;

                  Node * getExcludeNodes   (const UInt32 index) const;

                  bool                &editAutoExcludeTransparentNodes(void);
                  bool                 getAutoExcludeTransparentNodes (void) const;

                  MultiLightChunk * getMultiLightChunk(void) const;

                  bool                &editAutoSearchMultiLightChunk(void);
                  bool                 getAutoSearchMultiLightChunk (void) const;

                  Int32               &editSamplerCubeArrayTextureUnit(void);
                  Int32                getSamplerCubeArrayTextureUnit (void) const;

                  Int32               &editSamplerCubeArrayShadowTextureUnit(void);
                  Int32                getSamplerCubeArrayShadowTextureUnit (void) const;

                  Int32               &editSampler2DArrayTextureUnit(void);
                  Int32                getSampler2DArrayTextureUnit (void) const;

                  Int32               &editSampler2DArrayShadowTextureUnit(void);
                  Int32                getSampler2DArrayShadowTextureUnit (void) const;

                  Int32               &editShadowDataBindingPnt(void);
                  Int32                getShadowDataBindingPnt (void) const;

                  Int32               &editShadowParameterBindingPnt(void);
                  Int32                getShadowParameterBindingPnt (void) const;

                  Int32               &editDistributionBindingPnt(void);
                  Int32                getDistributionBindingPnt (void) const;

                  bool                &editDisableOverride(void);
                  bool                 getDisableOverride (void) const;

                  bool                &editArbTest        (void);
                  bool                 getArbTest         (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setShadowMode     (const UInt32 value);
            void setActivate       (const bool value);
            void setShadowOn       (const bool value);
            void setUseHWPCF       (const bool value);
            void setShadowMapWidth (const UInt32 value);
            void setShadowMapHeight(const UInt32 value);
            void setFilterDistributionSize(const Int32 value);
            void setSearchDistributionSize(const Int32 value);
            void setCullFrontFace  (const bool value);
            void setOffsetBias     (const Real32 value);
            void setOffsetFactor   (const Real32 value);
            void setEnlargeShadowVolumeZ(const Real32 value);
            void setAutoExcludeTransparentNodes(const bool value);
            void setMultiLightChunk(MultiLightChunk * const value);
            void setAutoSearchMultiLightChunk(const bool value);
            void setSamplerCubeArrayTextureUnit(const Int32 value);
            void setSamplerCubeArrayShadowTextureUnit(const Int32 value);
            void setSampler2DArrayTextureUnit(const Int32 value);
            void setSampler2DArrayShadowTextureUnit(const Int32 value);
            void setShadowDataBindingPnt(const Int32 value);
            void setShadowParameterBindingPnt(const Int32 value);
            void setDistributionBindingPnt(const Int32 value);
            void setDisableOverride(const bool value);
            void setArbTest        (const bool value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr Field Set                                 */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    void pushToExcludeNodes           (Node * const value   );
    void assignExcludeNodes          (const MFUnrecNodePtr    &value);
    void removeFromExcludeNodes (UInt32               uiIndex );
    void removeObjFromExcludeNodes(Node * const value   );
    void clearExcludeNodes            (void                         );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual SizeT  getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  MultiLightShadowStageTransitPtr  create          (void);
    static  MultiLightShadowStage           *createEmpty     (void);

    static  MultiLightShadowStageTransitPtr  createLocal     (
                                               BitVector bFlags = FCLocal::All);

    static  MultiLightShadowStage            *createEmptyLocal(
                                              BitVector bFlags = FCLocal::All);

    static  MultiLightShadowStageTransitPtr  createDependent  (BitVector bFlags);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerTransitPtr shallowCopy     (void) const;
    virtual FieldContainerTransitPtr shallowCopyLocal(
                                       BitVector bFlags = FCLocal::All) const;
    virtual FieldContainerTransitPtr shallowCopyDependent(
                                                      BitVector bFlags) const;

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFUInt32          _sfShadowMode;
    SFBool            _sfActivate;
    SFBool            _sfShadowOn;
    SFBool            _sfUseHWPCF;
    MFUnrecMultiLightShadowParameterPtr _mfShadowParameter;
    SFUInt32          _sfShadowMapWidth;
    SFUInt32          _sfShadowMapHeight;
    SFInt32           _sfFilterDistributionSize;
    SFInt32           _sfSearchDistributionSize;
    SFBool            _sfCullFrontFace;
    SFReal32          _sfOffsetBias;
    SFReal32          _sfOffsetFactor;
    SFReal32          _sfEnlargeShadowVolumeZ;
    MFUnrecNodePtr    _mfExcludeNodes;
    SFBool            _sfAutoExcludeTransparentNodes;
    SFWeakMultiLightChunkPtr _sfMultiLightChunk;
    SFBool            _sfAutoSearchMultiLightChunk;
    SFInt32           _sfSamplerCubeArrayTextureUnit;
    SFInt32           _sfSamplerCubeArrayShadowTextureUnit;
    SFInt32           _sfSampler2DArrayTextureUnit;
    SFInt32           _sfSampler2DArrayShadowTextureUnit;
    SFInt32           _sfShadowDataBindingPnt;
    SFInt32           _sfShadowParameterBindingPnt;
    SFInt32           _sfDistributionBindingPnt;
    SFBool            _sfDisableOverride;
    SFBool            _sfArbTest;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    MultiLightShadowStageBase(void);
    MultiLightShadowStageBase(const MultiLightShadowStageBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~MultiLightShadowStageBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */

    void onCreate(const MultiLightShadowStage *source = NULL);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

     GetFieldHandlePtr  getHandleShadowMode      (void) const;
     EditFieldHandlePtr editHandleShadowMode     (void);
     GetFieldHandlePtr  getHandleActivate        (void) const;
     EditFieldHandlePtr editHandleActivate       (void);
     GetFieldHandlePtr  getHandleShadowOn        (void) const;
     EditFieldHandlePtr editHandleShadowOn       (void);
     GetFieldHandlePtr  getHandleUseHWPCF        (void) const;
     EditFieldHandlePtr editHandleUseHWPCF       (void);
     GetFieldHandlePtr  getHandleShadowParameter (void) const;
     EditFieldHandlePtr editHandleShadowParameter(void);
     GetFieldHandlePtr  getHandleShadowMapWidth  (void) const;
     EditFieldHandlePtr editHandleShadowMapWidth (void);
     GetFieldHandlePtr  getHandleShadowMapHeight (void) const;
     EditFieldHandlePtr editHandleShadowMapHeight(void);
     GetFieldHandlePtr  getHandleFilterDistributionSize (void) const;
     EditFieldHandlePtr editHandleFilterDistributionSize(void);
     GetFieldHandlePtr  getHandleSearchDistributionSize (void) const;
     EditFieldHandlePtr editHandleSearchDistributionSize(void);
     GetFieldHandlePtr  getHandleCullFrontFace   (void) const;
     EditFieldHandlePtr editHandleCullFrontFace  (void);
     GetFieldHandlePtr  getHandleOffsetBias      (void) const;
     EditFieldHandlePtr editHandleOffsetBias     (void);
     GetFieldHandlePtr  getHandleOffsetFactor    (void) const;
     EditFieldHandlePtr editHandleOffsetFactor   (void);
     GetFieldHandlePtr  getHandleEnlargeShadowVolumeZ (void) const;
     EditFieldHandlePtr editHandleEnlargeShadowVolumeZ(void);
     GetFieldHandlePtr  getHandleExcludeNodes    (void) const;
     EditFieldHandlePtr editHandleExcludeNodes   (void);
     GetFieldHandlePtr  getHandleAutoExcludeTransparentNodes (void) const;
     EditFieldHandlePtr editHandleAutoExcludeTransparentNodes(void);
     GetFieldHandlePtr  getHandleMultiLightChunk (void) const;
     EditFieldHandlePtr editHandleMultiLightChunk(void);
     GetFieldHandlePtr  getHandleAutoSearchMultiLightChunk (void) const;
     EditFieldHandlePtr editHandleAutoSearchMultiLightChunk(void);
     GetFieldHandlePtr  getHandleSamplerCubeArrayTextureUnit (void) const;
     EditFieldHandlePtr editHandleSamplerCubeArrayTextureUnit(void);
     GetFieldHandlePtr  getHandleSamplerCubeArrayShadowTextureUnit (void) const;
     EditFieldHandlePtr editHandleSamplerCubeArrayShadowTextureUnit(void);
     GetFieldHandlePtr  getHandleSampler2DArrayTextureUnit (void) const;
     EditFieldHandlePtr editHandleSampler2DArrayTextureUnit(void);
     GetFieldHandlePtr  getHandleSampler2DArrayShadowTextureUnit (void) const;
     EditFieldHandlePtr editHandleSampler2DArrayShadowTextureUnit(void);
     GetFieldHandlePtr  getHandleShadowDataBindingPnt (void) const;
     EditFieldHandlePtr editHandleShadowDataBindingPnt(void);
     GetFieldHandlePtr  getHandleShadowParameterBindingPnt (void) const;
     EditFieldHandlePtr editHandleShadowParameterBindingPnt(void);
     GetFieldHandlePtr  getHandleDistributionBindingPnt (void) const;
     EditFieldHandlePtr editHandleDistributionBindingPnt(void);
     GetFieldHandlePtr  getHandleDisableOverride (void) const;
     EditFieldHandlePtr editHandleDisableOverride(void);
     GetFieldHandlePtr  getHandleArbTest         (void) const;
     EditFieldHandlePtr editHandleArbTest        (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

            const MFUnrecMultiLightShadowParameterPtr *getMFShadowParameter (void) const;
                  MFUnrecMultiLightShadowParameterPtr *editMFShadowParameter(void);


                  MultiLightShadowParameter * getShadowParameter(const UInt32 index) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    void pushToShadowParameter           (MultiLightShadowParameter * const value   );
    void assignShadowParameter           (const MFUnrecMultiLightShadowParameterPtr &value);
    void removeFromShadowParameter (UInt32                uiIndex );
    void removeObjFromShadowParameter(MultiLightShadowParameter * const value   );
    void clearShadowParameter            (void                          );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      MultiLightShadowStageBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual FieldContainer *createAspectCopy(
                                    const FieldContainer *pRefAspect) const;
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const MultiLightShadowStageBase &source);
};

typedef MultiLightShadowStageBase *MultiLightShadowStageBaseP;

typedef CoredNodeRefPtr  <MultiLightShadowStage> MultiLightShadowStageNodeRefPtr;
typedef CoredNodeMTRefPtr<MultiLightShadowStage> MultiLightShadowStageNodeMTRefPtr;

OSG_END_NAMESPACE

#endif /* _OSGMULTILIGHTSHADOWSTAGEBASE_H_ */
